name: Build, Test, Push and Deploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: nodejs-assignment-1
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 22.14.0
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0

      - name: Install dependencies
        run: |
          npm install
          npm install -g bower
          bower install

#      - name: Run tests
 #       run: npm test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest ${{ secrets.ECR_REGISTRY }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}       # Private SSH key stored in GitHub Secrets
          port: 22
          script: |
            echo "Logging in to AWS ECR on EC2"
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

            echo "Stopping old container (if any)..."
            docker stop myapp || true
            docker rm myapp || true

            echo "Pulling new image..."
            docker pull ${{ secrets.ECR_REGISTRY }}/$ECR_REPOSITORY:$IMAGE_TAG

            echo "Starting new container..."
            docker run -d --name myapp -p 7658:8000 ${{ secrets.ECR_REGISTRY }}/$ECR_REPOSITORY:$IMAGE_TAG
